language: rust
rust: stable
services: docker
env:
  global:
    - CRATE_NAME=ddns-cli
    - DISABLE_TESTS=1
    - RUST_BACKTRACE=1
    - LANG="zh_CN.UTF-8"
    - USING_CROSS=0
    - USING_TRUST=0
    - USING_SYSTEM_ALLOC=0
    - PKG_CONFIG_ALL_STATIC=1
    - secure: CYPORYR9ZRYzN3aEIYIQ/pzBLEd4zMIlDaePBzPyQPt+HmvT2MVVlQUu/AE3MrUiLuPZI9ZB0bkdY05Q1uRQhXuwryZ1TfiXtVTn10I+QfQg4u+wVO0a6KAaSZg+ODdf7nCascwfR0rZBQfS9lXC5+X+PpcA/OSWJwxxatwXYwRCUd0Gj/xCpqBPqOIso3Aj3R7FW0asVBXuYvQAORl18ib9d9EKSlVQF2cYjWSI5BbsIHhkBUaLN5HMBWaHDZh91wIkZmRrOroOiyJHb/zGCungQ9Mwg795GxaXCJWG5zxA8fFkDQ5lObAD9KwXJK055LrIrAvGwULRhAW4zgkAV7cMyttRGX9c1ik3Q6/g90N5xnT50e0lHkedybMQS28+Xr+kLndE8Wt4zG6ZqkVritwzFL9XsVCusAs2nysdgJ8XWPGLeSDZ5+cMkOnaKb2T/4RqPHs6fg5RFSgQ8/26sqm3nem3gwLXXKZU0aeKq4YkenJCRmq6y/Xt8gJTolSLHIHrqvupxAqtWGRlgFJcKBYVDh5AZGjie3KomwWKuC6ZFxBckptwaxPMllX2xwNmDUNGhGk0iuXzRu1+Fxlvkovs1mX+vd6j7eDduXuwWTE36qP3NcBpUdKhhjv3U/N07sBNWvab48kCIh0toHHWHnhX4MzQS+p87tsvEsFIrrY=
matrix:
  include:
    - os: osx
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=0 TARGET=x86_64-apple-darwin
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=aarch64-unknown-linux-gnu
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=arm-unknown-linux-gnueabi
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=armv7-unknown-linux-gnueabihf
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=i686-unknown-linux-gnu
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=0 TARGET=x86_64-unknown-linux-gnu
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=i686-unknown-linux-musl
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-unknown-linux-musl
      addons:
        apt:
          packages:
            - docker-ce
    - os: linux
      dist: focal
      sudo: required
      env: USING_TRUST=1 TARGET=aarch64-linux-android
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=arm-linux-androideabi
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=armv7-linux-androideabi
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=i686-linux-android
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=x86_64-linux-android
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-unknown-netbsd
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-unknown-freebsd
    - os: linux
      dist: focal
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-sun-solaris
before_install:
  - rustup self update;
  - rustup update --force stable;
  - |-
    if [ $USING_TRUST -ne 0 ]; then
    set -e ;
    elif [ $USING_CROSS -ne 0 ]; then
    cargo install xargo --force;
    cargo install cross --force;
    else
    rustup target add $TARGET ;
    rustup toolchain install stable-$TARGET ;
    fi
install:
  - |-
    if [ $USING_TRUST -ne 0 ]; then
    bash ci/install.sh ;
    source ~/.cargo/env || true ;
    fi
script:
  - |-
    if [ $USING_SYSTEM_ALLOC -eq 0 ]; then
    BUILD_WITH_SYSTEM_ALLOC="";
    else
    BUILD_WITH_SYSTEM_ALLOC=" --features system-alloc";
    fi
  - |-
    if [ $USING_TRUST -ne 0 ]; then
    bash ci/script.sh ;
    elif [ $USING_CROSS -ne 0 ]; then
    cross build --target $TARGET --release $BUILD_WITH_SYSTEM_ALLOC ;
    else
    env PKG_CONFIG_ALL_STATIC=1 cargo build --release --target $TARGET $BUILD_WITH_SYSTEM_ALLOC ;
    fi
    cd "target/$TARGET/release/";
    mkdir -p bin;
    if [ -e ddns-cli ]; then
    cp -f ddns-cli bin/ddns-cli;
    else
    cp -f ddns-cli* bin/;
    fi
    tar -zcvf $TARGET.tar.gz bin;
    cp -f ../../../Dockerfile ./;
    if [ "$TARGET" == "x86_64-unknown-linux-musl" ] && [ "x" != "x$TRAVIS_TAG" ]; then
    echo "$DOCKER_TOKEN" | docker login -u "owt5008137" --password-stdin docker.io
    docker build --force-rm --tag docker.io/owt5008137/ddns-cli:latest .
    docker tag docker.io/owt5008137/ddns-cli:latest docker.io/owt5008137/ddns-cli:$TRAVIS_TAG
    docker push docker.io/owt5008137/ddns-cli:latest
    docker push docker.io/owt5008137/ddns-cli:$TRAVIS_TAG
    fi
    cd ../../..;
    mv -f "target/$TARGET/release/$TARGET.tar.gz" ./;
cache: cargo
deploy:
  provider: releases
  api_key:
    secure: kEV+KpMWw+2SACmiGx21/fLKaTh98GbJXUTYNh2pIJ0bU3a69QxPjukcoXK8irYET6rRxW2paLRWuXo+5t9S3yCrXHS4t8IcH+MZOkZBqL1VJGmEQcgeyaKfDwECnUGJTVejJkZsgN3p5gbOFq3s5Gbp1DkAfLSW5v640dfDxq1CFsiLv5sR33VHuTb0u5fAc2fCQKxKoHKgQ2qveubaOH3IWTjoy/hOS566SH0oAs98kPbMd23UQ90J2B80Ee3lUP9dv7BK3w9mVi019XO1bl2CZmr/MoE4ZM1BtMbFqRYNh0Pdee6Bvn/lJqtRzjyrir5wMipVAi55IKr2pa5JTZdNp1Q51Re7OUFsjhZkX+YektMl/mYolq1SfMQzPQ1GYaTMbGh7t6GTOFCgHkb+VadlmoSG3FaVvg8m3Ox6NJ4okuF4eMj/kmyomCQoQHioPn/9Tfnq8BiPiTq6Azh+ukQpYlMH13chw7rAr9rLqOhlZ8xI66g07AT+DeUNa6iNGkr490yJ02t6uP0lvusDN6DBVDoAb+EKSGJgKRD4SDSZZwX0yodj/7SDydVGUU6a4ybuUuXAlpJacHI/uIJtMmodzjXUUVVJHlZv/p664pztER5Zsd9AiFJ4khoOcQM5v4eg1hxGWyMEuUElzsUGZBGIO/9tDiFBvQrz2Glw+MI=
  file_glob: true
  file: "*.tar.gz"
  skip_cleanup: true
  overwrite: true
  draft: true
  on:
    all_branches: true
    tags: true
notifications:
  email:
    recipients:
      - admin@owent.net
      - owt5008137@live.com
    on_success: never
    on_failure: never
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
