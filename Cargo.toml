[package]
name = "ddns-cli"
version = "0.1.0"
readme = "README.md"
description = "ddns client for cloudflare"
authors = ["owent <admin@owent.net>"]
homepage = "https://crates.io/crates/ddns-cli"
documentation = "https://github.com/owt5008137/ddns-cli"
repository = "https://github.com/owt5008137/ddns-cli"
keywords = ["ddns", "client", "dns"]
categories = ["network-programming", "web-programming::http-client"]
license = "MIT OR Apache-2.0"
edition = "2018"

[features]
default = ["default-logger"]
default-logger = ["slog-stdlog", "slog-envlogger"]
system-alloc = []

[dependencies]
slog = { version = "^2.5", features = ["max_level_trace", "release_max_level_trace"] }
slog-stdlog = { version = "^4", optional = true }
slog-envlogger = { version = "^2.2", optional = true }
slog-term = { version = "^2.4" }
slog-async = "^2.3"
serde = { version = "^1.0.80", default-features = true, features = ["derive"] }
serde_json = "^1.0.33"
# hyper = { version = ">=0.13.1", default-features = true, features = ["tcp"] }
# hyper-tls = { version = ">=0.4.0", default-features = true }
tokio = { version = ">=0.2.0-alpha.6", features = ["macros"] }
reqwest = { version = "0.10.0-alpha.2", default-features = true, features = ["tls", "gzip", "json"] }
http = { version = "^0.2.0", default-features = true }
futures = { version = "^0.3.1", features = ["std", "async-await"] }
futures-core = "^0.3.1"
time = ">=0.1.40"
hex = ">=0.3.2"
regex = "^1.1.9"
bytes = ">=0.4.11"
lazy_static = "^1.2.0"
ring = "^0.16.9"
rustls = "^0.16.0"
uuid = "^0.8.0"

[dependencies.clap]
version = "^2.33.0"
default-features = false
features = ["suggestions", "color"]

[dev-dependencies]
criterion = "^0.3.0"
regex = "^1.3"


[[bin]]
name = "ddns-cli"

# The development profile, used for `cargo build`.
[profile.dev]
# opt-level = 0    # controls the `--opt-level` the compiler builds with.
                   # 0-1 is good for debugging. 2 is well-optimized. Max is 3.
debug = true       # include debug information (debug symbols). Equivalent to
                   # `-C debuginfo=2` compiler flag.
rpath = false      # controls whether compiler should set loader paths.
                   # If true, passes `-C rpath` flag to the compiler.
lto = false        # Link Time Optimization usually reduces size of binaries
                   # and static libraries. Increases compilation time.
                   # If true, passes `-C lto` flag to the compiler.
debug-assertions = true # controls whether debug assertions are enabled
                   # (e.g. debug_assert!() and arithmetic overflow checks)
codegen-units = 4  # if > 1 enables parallel code generation which improves
                   # compile times, but prevents some optimizations.
                   # Passes `-C codegen-units`. Ignored when `lto = true`.
incremental = false
panic = 'abort'    # panic strategy (`-C panic=...`), can also be 'abort'

# The release profile, used for `cargo build --release`.
[profile.release]
lto = true
codegen-units = 1
incremental = false
panic = 'abort'
opt-level = "z"
